<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>ENC28J60 Words</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="enc28j60-words">
<h1>ENC28J60 Words</h1>
<p>A driver for the ENC28J60 10Base-T Ethernet chip is included with zeptoforth.  This device uses a SPI interface plus an interrupt line.  The external API for this device is provided by the <code class="docutils literal notranslate"><span class="pre">&lt;enc28j60-runner&gt;</span></code> class in the <code class="docutils literal notranslate"><span class="pre">enc28j60-runner</span></code> module.  This class exposes a frame interface as well as a few control words.</p>
<section id="enc28j60-runner">
<h2><code class="docutils literal notranslate"><span class="pre">enc28j60-runner</span></code></h2>
<p>The <code class="docutils literal notranslate"><span class="pre">enc28j60-runner</span></code> module contains the following constant:</p>
<section id="default-mac-addr">
<h3><code class="docutils literal notranslate"><span class="pre">default-mac-addr</span></code></h3>
<p>( – D: default-mac-addr )</p>
<p>This is a token when provided to the <code class="docutils literal notranslate"><span class="pre">&lt;enc28j60-runner&gt;</span></code> class when instatiated indicates that the default MAC address is to be used.  The default MAC address is derived from the Raspberry Pico 64-bit unique ID, with the <code class="docutils literal notranslate"><span class="pre">AA:00:01</span></code> OUI.</p>
<p>The <code class="docutils literal notranslate"><span class="pre">enc28j60-runner</span></code> module contains the following class:</p>
</section>
<section id="id1">
<h3><code class="docutils literal notranslate"><span class="pre">&lt;enc28j60-runner&gt;</span></code></h3>
<p>The <code class="docutils literal notranslate"><span class="pre">&lt;enc28j60-runner&gt;</span></code> class has the constructor:</p>
<section id="new">
<h4><code class="docutils literal notranslate"><span class="pre">new</span></code></h4>
<p>( int-pin spi-pin spi-num D: mac-addr – )</p>
<p>This instantiates an <code class="docutils literal notranslate"><span class="pre">&lt;enc28j60-runner&gt;</span></code> instance with MAC address <em>mac-addr</em> (or the default address if <code class="docutils literal notranslate"><span class="pre">default-mac-addr</span></code> is supplied), using the SPI interface block number <em>spi-num</em> and GPIO number <em>spi-pin</em> and the next three in sequence.  The interrupt signal uses GPIO number <em>int-pin</em> (which does not have to be adjacent to the SPI connections).</p>
<p>The class will use the GPIO interrupt for processor core 1, and the DMA interrupt.  Note that currently zeptoforth does not have a mechanism for allowing multiple users of the same interrupt, so applications may not use these interrupts while the ENC28J60 is in use.</p>
<p>The <code class="docutils literal notranslate"><span class="pre">&lt;enc28j60-runner&gt;</span></code> class has the following methods:</p>
</section>
<section id="init-enc28j60-runner">
<h4><code class="docutils literal notranslate"><span class="pre">init-enc28j60-runner</span></code></h4>
<p>( self – )
Initialize the runner class.</p>
</section>
<section id="run-enc28j60">
<h4><code class="docutils literal notranslate"><span class="pre">run-enc28j60</span></code></h4>
<p>( self – )
Start the runner task.  Once this is done the device starts receiving packets, and is able to process transmit requests.</p>
</section>
<section id="enc28j60-enable-mac">
<h4><code class="docutils literal notranslate"><span class="pre">enc28j60-enable-mac</span></code></h4>
<p>( D: d-mac-addr self – )
Enable a MAC address.  Normally this is done for multicast addresses, though the device also accepts unicast addresses.  This uses a hash filter with a 64 entry hash bitmap, so other addresses than the one requested may also match.  The application may need to verify the destination MAC address field in received packets to filter out such spurious matches.</p>
</section>
<section id="enc28j60-set-duplex">
<h4><code class="docutils literal notranslate"><span class="pre">enc28j60-set-duplex</span></code></h4>
<p>( full-duplex self – )
Set half or full duplex mode (true value for <em>full-duplex</em> sets full duplex mode).  Note that the ENC28J60 does not implement standard duplex negotiation or advertisement.  If connected to a port that expects negotiation, it will appear as a half duplex interface.  Some low cost Ethernet switches support only full duplex.</p>
<p>The default setting is full duplex.</p>
</section>
</section>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>