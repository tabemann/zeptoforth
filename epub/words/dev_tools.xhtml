<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>Development Tools Words</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section class="tex2jax_ignore mathjax_ignore" id="development-tools-words">
<h1>Development Tools Words</h1>
<p>There are a number of useful words provided with zeptoforth’s development tools.</p>
<p>These words are in <code class="docutils literal notranslate"><span class="pre">forth</span></code>.</p>
<section id="disassembler">
<h2>Disassembler</h2>
<p>A disassembler that covers (almost all of) the instructions utilized by zeptoforth is included with zeptoforth. It has two different orthogonal modes of operation; one is whether it disassembles instructions in a specified range of addresses or it disassembles just a selected word, the other is whether it disassembles user-friendly assembly including instruction addresses, instructions as hex, addresses to go along with labels, and in one set of cases computes absolute addresses from PC-relative instructions, or whether it disassembles assembler-friendly assembly without such niceities. In both modes it</p>
<p>As a result there are four different words for invoking the disassembler:</p>
<section id="disassemble">
<h3><code class="docutils literal notranslate"><span class="pre">disassemble</span></code></h3>
<p>( start-addr end-addr – )</p>
<p>This word disassembles instructions, for human consumption, starting from <em>start-addr</em> and ending at, non-inclusive, <em>end-addr</em>.</p>
</section>
<section id="disassemble-for-gas">
<h3><code class="docutils literal notranslate"><span class="pre">disassemble-for-gas</span></code></h3>
<p>( start-addr end-addr – )</p>
<p>This word disassembles instructions, for feeding into an assembler, starting from <em>start-addr</em> and ending at, non-inclusive, <em>end-addr</em>.</p>
</section>
<section id="see">
<h3><code class="docutils literal notranslate"><span class="pre">see</span></code></h3>
<p>( “name” – )</p>
<p>This word disassembles instructions, for human consumption, comprising the whole of the word whose name is specified afterwards.</p>
</section>
<section id="see-for-gas">
<h3><code class="docutils literal notranslate"><span class="pre">see-for-gas</span></code></h3>
<p>( “name” – )</p>
<p>This word disassembles instructions, for feeding into an assembler, comprising the whole of the word whose name is specified afterwards.</p>
</section>
</section>
<section id="viewing-memory">
<h2>Viewing Memory</h2>
<p>Memory can be viewed with the following word:</p>
<section id="dump">
<h3><code class="docutils literal notranslate"><span class="pre">dump</span></code></h3>
<p>( start-addr end-addr – )</p>
<p>This word dumps memory as sequences of 16 bytes in hexadecimal, along with displaying each byte, if a valid ASCII character, starting from <em>start-addr</em> and ending at, non-inclusive, <em>end-addr</em>.</p>
</section>
<section id="dump-halfs">
<h3><code class="docutils literal notranslate"><span class="pre">dump-halfs</span></code></h3>
<p>( start-addr end-addr – )</p>
<p>This word dumps memory as sequences of 8 16-bit halfwords in hexadecimal, along with displaying each byte, if a valid ASCII character, starting from <em>start-addr</em> and ending at, non-inclusive, <em>end-addr</em>.</p>
</section>
<section id="dump-cells">
<h3><code class="docutils literal notranslate"><span class="pre">dump-cells</span></code></h3>
<p>( start-addr end-addr – )</p>
<p>This word dumps memory as sequences of 4 32-bit cells in hexadecimal, along with displaying each byte, if a valid ASCII character, starting from <em>start-addr</em> and ending at, non-inclusive, <em>end-addr</em>.</p>
</section>
<section id="dump-ascii">
<h3><code class="docutils literal notranslate"><span class="pre">dump-ascii</span></code></h3>
<p>( start-addr end-addr – )</p>
<p>This word dumps memory as sequences of 64 ASCII characters, starting from <em>start-addr</em> and ending at, non-inclusing <em>end-addr</em>.</p>
</section>
</section>
<section id="listing-words">
<h2>Listing Words</h2>
<section id="words">
<h3><code class="docutils literal notranslate"><span class="pre">words</span></code></h3>
<p>( – )</p>
<p>This word simply lists every user-viewable word in the current namespace in RAM or in flash, organized as four columns.</p>
</section>
<section id="words-in">
<h3><code class="docutils literal notranslate"><span class="pre">words-in</span></code></h3>
<p>( module – )</p>
<p>This word list every user-viewable word in a selected module in RAM or in flash, organized as four columns.</p>
</section>
<section id="lookup">
<h3><code class="docutils literal notranslate"><span class="pre">lookup</span></code></h3>
<p>( “name” – )</p>
<p>This word lists each word which has a prefix corresponding to the maximal prefix or the specified token which any word in the current namespace in RAM or in flash matches, organized as four columns.</p>
</section>
<section id="lookup-in">
<h3><code class="docutils literal notranslate"><span class="pre">lookup-in</span></code></h3>
<p>( module “name” – )</p>
<p>This word lists each word which has a prefix corresponding to the maximal prefix or the specified token which any word in a selected module in RAM or in flash matches, organized as four columns.</p>
</section>
<section id="word-info">
<h3><code class="docutils literal notranslate"><span class="pre">word-info</span></code></h3>
<p>( “name” – )</p>
<p>Dump all the words that go by a certain name.</p>
</section>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>