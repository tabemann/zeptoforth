<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>Pin Words</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section class="tex2jax_ignore mathjax_ignore" id="pin-words">
<h1>Pin Words</h1>
<p>Pins provide an abstraction layer over GPIO’s to greatly simplify their API interface and to unify them as far as possible across the supported platforms</p>
<section id="pin">
<h2><code class="docutils literal notranslate"><span class="pre">pin</span></code></h2>
<p>The following words are in the <code class="docutils literal notranslate"><span class="pre">pin</span></code> module:</p>
<section id="common-pin-words">
<h3>Common Pin Words</h3>
<section id="low">
<h4><code class="docutils literal notranslate"><span class="pre">low</span></code></h4>
<p>( – state )</p>
<p>The low pin state.</p>
</section>
<section id="high">
<h4><code class="docutils literal notranslate"><span class="pre">high</span></code></h4>
<p>( – state )</p>
<p>The high pin state.</p>
</section>
<section id="x-pin-out-of-range">
<h4><code class="docutils literal notranslate"><span class="pre">x-pin-out-of-range</span></code></h4>
<p>( – )</p>
<p>The pin out of range exception.</p>
</section>
<section id="x-alternate-out-of-range">
<h4><code class="docutils literal notranslate"><span class="pre">x-alternate-out-of-range</span></code></h4>
<p>( – )</p>
<p>The alternate function out of range exception.</p>
</section>
<section id="input-pin">
<h4><code class="docutils literal notranslate"><span class="pre">input-pin</span></code></h4>
<p>( pin – )</p>
<p>Set <em>pin</em> to an input state.</p>
</section>
<section id="output-pin">
<h4><code class="docutils literal notranslate"><span class="pre">output-pin</span></code></h4>
<p>( pin – )</p>
<p>Set <em>pin</em> to an output state.</p>
</section>
<section id="alternate-pin">
<h4><code class="docutils literal notranslate"><span class="pre">alternate-pin</span></code></h4>
<p>( function pin – )</p>
<p>Set <em>pin</em> to alternate function <em>function</em>.</p>
</section>
<section id="pull-up-pin">
<h4><code class="docutils literal notranslate"><span class="pre">pull-up-pin</span></code></h4>
<p>( pin – )</p>
<p>Set <em>pin</em> to be pull-up.</p>
</section>
<section id="pull-down-pin">
<h4><code class="docutils literal notranslate"><span class="pre">pull-down-pin</span></code></h4>
<p>( pin – )</p>
<p>Set <em>pin</em> to be pull-down.</p>
</section>
<section id="floating-pin">
<h4><code class="docutils literal notranslate"><span class="pre">floating-pin</span></code></h4>
<p>( pin – )</p>
<p>Set <em>pin</em> to be floating.</p>
</section>
<section id="slow-pin">
<h4><code class="docutils literal notranslate"><span class="pre">slow-pin</span></code></h4>
<p>( pin – )</p>
<p>Set <em>pin</em> to have a slow data rate.</p>
</section>
<section id="fast-pin">
<h4><code class="docutils literal notranslate"><span class="pre">fast-pin</span></code></h4>
<p>( pin – )</p>
<p>Set <em>pin</em> to have a fast data rate.</p>
</section>
<section id="id1">
<h4><code class="docutils literal notranslate"><span class="pre">pin!</span></code></h4>
<p>( state pin – )</p>
<p>Set <em>pin</em> to output the high/low state <em>state</em>.</p>
</section>
<section id="id2">
<h4><code class="docutils literal notranslate"><span class="pre">pin&#64;</span></code></h4>
<p>( pin – state )</p>
<p>Get the input high/low state of <em>pin</em>.</p>
</section>
<section id="pin-out">
<h4><code class="docutils literal notranslate"><span class="pre">pin-out&#64;</span></code></h4>
<p>( pin – state )</p>
<p>Get the output high/low state of <em>pin</em>.</p>
</section>
<section id="toggle-pin">
<h4><code class="docutils literal notranslate"><span class="pre">toggle-pin</span></code></h4>
<p>( pin – )</p>
<p>Toggle the high/low state of <em>pin</em>.</p>
</section>
</section>
<section id="rp2040-notes">
<h3>RP2040 Notes</h3>
<p>On the RP2040, a pin is simply an integer from 0 to 29 corresponding to GPIO0 through GPIO29.</p>
</section>
<section id="stm32f407-stm32l476-stm32f746-and-stm32f411-pin-words">
<h3>STM32F407, STM32L476, STM32F746, and STM32F411 Pin Words</h3>
<p>On the STM32F407, STM32L476, STM32F746, or STM32F411, a pin is a value that combines a pin on a GPIO with a GPIO which is constructed on the STM32F407 or STM32L476 with <code class="docutils literal notranslate"><span class="pre">XA</span></code> through <code class="docutils literal notranslate"><span class="pre">XI</span></code>, on the STM32F746 with <code class="docutils literal notranslate"><span class="pre">XA</span></code> through <code class="docutils literal notranslate"><span class="pre">XK</span></code>, or on the STM32F411 with <code class="docutils literal notranslate"><span class="pre">XA</span></code> through <code class="docutils literal notranslate"><span class="pre">XE</span></code> or with <code class="docutils literal notranslate"><span class="pre">XH</span></code>.</p>
<section id="x-gpio-out-of-range">
<h4><code class="docutils literal notranslate"><span class="pre">x-gpio-out-of-range</span></code></h4>
<p>( – )</p>
<p>GPIO out of range exception.</p>
</section>
</section>
<section id="stm32f407-and-stm32l476-pin-words">
<h3>STM32F407 and STM32L476 Pin Words</h3>
<section id="xa-through-xi">
<h4><code class="docutils literal notranslate"><span class="pre">XA</span></code> through <code class="docutils literal notranslate"><span class="pre">XI</span></code></h4>
<p>( index – pin )</p>
<p>Take a pin index on a GPIO and return a pin on GPIOA through GPIOI.</p>
</section>
</section>
<section id="stm32f746-pin-words">
<h3>STM32F746 Pin Words</h3>
<section id="xa-through-xk">
<h4><code class="docutils literal notranslate"><span class="pre">XA</span></code> through <code class="docutils literal notranslate"><span class="pre">XK</span></code></h4>
<p>( index – pin )</p>
<p>Take a pin index on a GPIO and return a pin on GPIOA through GPIOK.</p>
</section>
<section id="xa-through-xe-and-xh">
<h4><code class="docutils literal notranslate"><span class="pre">XA</span></code> through <code class="docutils literal notranslate"><span class="pre">XE</span></code> and <code class="docutils literal notranslate"><span class="pre">XH</span></code></h4>
<p>( index – pin )</p>
<p>Take a pin index on a GPIO and return a pin on GPIOA through GPIOE and GPIOH.</p>
</section>
</section>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>